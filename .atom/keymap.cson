# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson



'body':
  # Toggle project manager and fuzzy finder when having no focus. May happen
  # either in Tree View or other modals like the key event debugger.
  'ctrl-p': 'project-manager:list-projects'
  'ctrl-t': 'fuzzy-finder:toggle-file-finder'
  'cmd-o': 'tree-view:toggle-focus'



'body .native-key-bindings':
  # Move between panes.
  'ctrl-h': 'pane:show-previous-item'
  'ctrl-l': 'pane:show-next-item'



'body .tree-view':
  # Move up and down the vim way in Tree View.
  'g g': 'core:move-to-top'
  'shift-g': 'core:move-to-bottom'
  # Focus editor when being in Tree View. This works in combination with
  # reveal-active-file.
  'cmd-o': 'tree-view:unfocus'
  # Rename files and folders.
  'r': 'tree-view:move'
  # Toggle command palette, project manager and fuzzy finder.
  'ctrl-c': 'command-palette:toggle'
  'ctrl-p': 'project-manager:list-projects'
  'ctrl-t': 'fuzzy-finder:toggle-file-finder'



'html body atom-workspace.workspace':
  # Move between panes.
  'ctrl-h': 'pane:show-previous-item'
  'ctrl-l': 'pane:show-next-item'
   # Move panes around.
  'ctrl-shift-h': 'pane:move-item-left'
  'ctrl-shift-l': 'pane:move-item-right'
  # toggle dev console like in chrome
  'alt-cmd-j': 'window:toggle-dev-tools'
  # reload window like in chrome
  'cmd-r': 'window:reload'



'atom-text-editor':
  # Toggle command palette and project manager.
  'ctrl-c': 'command-palette:toggle'
  'ctrl-p': 'project-manager:list-projects'
  'ctrl-t': 'fuzzy-finder:toggle-file-finder'
  # Move between command palette results.
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'
  # jump in cursor position history
  'ctrl-o': 'cursor-history:next-within-editor'
  'ctrl-i': 'cursor-history:prev-within-editor'
  # Jump to golang definition of golang statements under the cursor.
  'cmd-g': 'atom-ide-go-to-definition:go-to-definition'
  # Focus Tree View when being in editor. This works in combination with
  # unfocus.
  'cmd-o': 'tree-view:reveal-active-file'



'atom-text-editor.autocomplete-active':
  # move inside autocomplete suggestions
  'ctrl-k': 'autocomplete-plus:move-up'
  'ctrl-j': 'autocomplete-plus:move-down'



'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  # format any block in visual mode
  'g q': 'autoflow:reflow-selection'
  # yank everything from cursour to end of line
  'Y': 'vim-mode-plus:yank-to-last-character-of-line'



'atom-panel.modal atom-text-editor[mini]':
  # Toggle command palette, project manager and fuzzy finder.
  'ctrl-c': 'command-palette:toggle'
  'ctrl-p': 'core:cancel'
  'ctrl-t': 'fuzzy-finder:toggle-file-finder'
  # Move between panes.
  'ctrl-h': 'pane:show-previous-item'
  'ctrl-l': 'pane:show-next-item'
   # Move panes around.
  'ctrl-shift-h': 'pane:move-item-left'
  'ctrl-shift-l': 'pane:move-item-right'
